trigger:
- none

jobs:
- job: DOWNLOAD_DEPS
  steps:
  - checkout: self

  # - bash: |
  #     cd ./Dependencies/IGraphics/
  #     ./download-igraphics-libs-win.sh
  #   displayName: Download IGraphics Dependencies

  - bash: |
      cd ./Dependencies/IPlug
      rm -r VST2_SDK
      git clone https://github.com/olilarkin/VST2_SDK.git
    displayName: Download VST2 SDK

  - bash: |
      cd ./Dependencies/IPlug
      rm -r AAX_SDK
      git clone https://github.com/olilarkin/AAX_SDK.git
    displayName: Download AAX SDK

  - bash: |
      cd ./Dependencies/IPlug
      rm -r VST3_SDK
      git clone --recursive https://github.com/steinbergmedia/vst3sdk.git VST3_SDK
    displayName: Download VST3 SDK

  - bash: |
      cd ./Dependencies/IPlug
      rm -r WAM_SDK
      git clone https://github.com/webaudiomodules/api.git WAM_SDK
      mv WAM_SDK/wamsdk/* ../
    displayName: Download WAM SDK

  - bash: |
      cd ./Dependencies/IPlug
      rm -r WAM_AWP
      git clone https://github.com/jariseon/audioworklet-polyfill WAM_AWP
    displayName: Download WAM AWP

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'SRC'
    displayName: Publish Source

- job: BUILD_WIN_DEPS
  dependsOn: DOWNLOAD_DEPS 
  strategy:
    matrix:
      x86_RELEASE:
        buildPlatform: 'Win32'
        buildConfiguration: 'Release'
      x64_RELEASE:
        buildPlatform: 'x64'
        buildConfiguration: 'Release'
      x86_DEBUG:
        buildPlatform: 'Win32'
        buildConfiguration: 'Debug'
      x64_DEBUG:
        buildPlatform: 'x64'
        buildConfiguration: 'Debug'

  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: DownloadPipelineArtifact@0
    inputs:
      artifactName: 'SRC' 

  # build windows dependencies
  - task: VSBuild@1
    inputs:
      solution: 'Dependencies/IGraphics/IGraphicsLibraries.sln' 
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
    displayName: Build Windows Dependencies

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'DEPS_BUILD_WIN_$(buildPlatform)_$(buildConfiguration)'
      targetPath: 'Dependencies/Build/'
    displayName: Publish Windows $(buildPlatform) $(buildConfiguration) Dependencies Artifacts

- job: PUBLISH_WIN_DEPS
  dependsOn: BUILD_WIN_DEPS
  steps:
    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'DEPS_BUILD_WIN_Win32_Release' 
        targetPath: 'Dependencies/Build/'
      displayName: Download Win32_Release Artifact

    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'DEPS_BUILD_WIN_Win32_Debug' 
        targetPath: 'Dependencies/Build/'
      displayName: Download Win32_Debug Artifact

    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'DEPS_BUILD_WIN_x64_Release' 
        targetPath: 'Dependencies/Build/'
      displayName: Download x64_Release Artifact

    - task: DownloadPipelineArtifact@0
      inputs:
        artifactName: 'DEPS_BUILD_WIN_x64_Debug' 
        targetPath: 'Dependencies/Build/'
      displayName: Download x64_Debug Artifact

    - task: DeleteFiles@1
      inputs:
        contents: 'Dependencies/Build/tmp'

    - task: DeleteFiles@1
      inputs:
        contents: 'Dependencies/Build/*.log'

    - task: PublishPipelineArtifact@0
      inputs:
        artifactName: 'IPLUG2_DEPS_WIN'
        targetPath: 'Dependencies/Build/'
      displayName: Publish Windows Dependencies Artifacts

    # - task: GithubRelease@0
    #   inputs:
    #     gitHubConnection: olilarkin
    #     repositoryName: iPlug2/iPlug2
    #     action: 'create'
    #     target: '$(build.sourceVersion)'
    #     tagSource: 'manual'
    #     tag: 'setup'
    #     title: iPlug2 optional dependencies
    #     assets: '$(build.artifactStagingDirectory)/*'
    #     assetUploadMode: 'delete'
    #     isDraft: true
    #     isPreRelease: true
    #     addChangeLog: false